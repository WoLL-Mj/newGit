{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/wanglong/wl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/wanglong/wl/src/template/Route_Demo/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nexport default function RouteDemo() {\n  _s();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var doubleCount = useMemo(function () {\n    return 2 * count;\n  }, [count]);\n  var couterRef = useRef();\n  useEffect(function () {\n    debugger;\n    document.title = \"The value is \".concat(count);\n    couterRef.current = 1;\n    console.log(couterRef.current);\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      ref: couterRef,\n      onClick: function onClick() {\n        setCount(count + 1);\n      },\n      children: [\"Count: \", count, \", double: \", doubleCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(RouteDemo, \"dA7Q0wfcPhIZkUeWdb8P8uO67zU=\");\n\n_c = RouteDemo;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteDemo\");","map":{"version":3,"sources":["/Users/wanglong/wl/src/template/Route_Demo/index.js"],"names":["React","useState","useEffect","useMemo","useRef","RouteDemo","count","setCount","doubleCount","couterRef","document","title","current","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,EAA8CC,MAA9C,QAA4D,OAA5D;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBACNJ,QAAQ,CAAC,CAAD,CADF;AAAA;AAAA,MACzBK,KADyB;AAAA,MAClBC,QADkB;;AAGhC,MAAMC,WAAW,GAAGL,OAAO,CAAC,YAAM;AAC9B,WAAO,IAAIG,KAAX;AACH,GAF0B,EAExB,CAACA,KAAD,CAFwB,CAA3B;AAIA,MAAMG,SAAS,GAAGL,MAAM,EAAxB;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACZ;AACAQ,IAAAA,QAAQ,CAACC,KAAT,0BAAiCL,KAAjC;AACAG,IAAAA,SAAS,CAACG,OAAV,GAAoB,CAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACG,OAAtB;AACH,GALQ,EAKN,CAACN,KAAD,CALM,CAAT;AAOA,sBACI;AAAA,2BACA;AAAQ,MAAA,GAAG,EAAEG,SAAb;AAAwB,MAAA,OAAO,EAAE,mBAAM;AAACF,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAAoB,OAA5D;AAAA,4BAAsEA,KAAtE,gBAAuFE,WAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAKH;;GArBuBH,S;;KAAAA,S","sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from 'react';\n\nexport default function RouteDemo() {\n    const [count, setCount] = useState(0);\n\n    const doubleCount = useMemo(() => {\n        return 2 * count;\n    }, [count]);\n\n    const couterRef = useRef();\n\n    useEffect(() => {\n        debugger\n        document.title = `The value is ${count}`;\n        couterRef.current = 1\n        console.log(couterRef.current);\n    }, [count]);\n    \n    return (\n        <>\n        <button ref={couterRef} onClick={() => {setCount(count + 1)}}>Count: {count}, double: {doubleCount}</button>\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}