{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/wanglong/wl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/wanglong/wl/src/template/Xia_La/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport axios from 'axios';\nimport qs from 'qs';\nimport './style.less';\nexport default function InfiniteScroller() {\n  _s();\n\n  var _this = this;\n\n  var arr = ['a', 'b', 'c', 'd', 'e'];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _ = 0,\n      _ref = _slicedToArray(_, 2),\n      count = _ref[0],\n      setCount = _ref[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasMore = _useState4[0],\n      setHasMore = _useState4[1];\n\n  var loadMoreData = function loadMoreData() {\n    var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    // page 当前滚动到了第几页\n    var _this$state = _this.state,\n        data = _this$state.data,\n        count = _this$state.count; // 超过200条数据 不继续监听下拉事件\n\n    if (count && data.length >= count) {\n      return false;\n    }\n\n    debugger;\n    setData(arr); // page 是当前请求第几页数据\n    // limit 每页我需要返回的数据条数\n    // axios.post('https://blogs.zdldove.top/Home/Apis/listWithPage',qs.stringify({page, limit: 20}))\n    //   .then(res => {\n    //     this.setState({\n    //       data: [...data, ...arr], //拼接每次加载的数据 arr是我自定义的数据\n    //       count: res.data.result.count, \n    //     }, () => {\n    //      console.log(this.state) //查看数据是否已经改变\n    //     })\n    //   })\n    //   .catch(err => console.log(err))\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      initialLoad: false // 不让它进入直接加载\n      ,\n      pageStart: 1 // 设置初始化请求的页数\n      ,\n      loadMore: loadMoreData // 监听的ajax请求\n      ,\n      hasMore: hasMore // 是否继续监听滚动事件 true 监听 | false 不再监听\n      ,\n      useWindow: false // 不监听 window 滚动条\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pages-hoc\",\n        children: data.map(function (value, key) {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", key, \" \"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InfiniteScroller, \"0wYcqn5GdN67stt+RlrJL2CWrJc=\");\n\n_c = InfiniteScroller;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfiniteScroller\");","map":{"version":3,"sources":["/Users/wanglong/wl/src/template/Xia_La/index.js"],"names":["React","useState","InfiniteScroll","axios","qs","InfiniteScroller","arr","data","setData","count","setCount","hasMore","setHasMore","loadMoreData","page","state","length","map","value","key"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AAAA;;AACvC,MAAMC,GAAG,GAAG,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,CAAZ;;AADuC,kBAEfL,QAAQ,CAAC,EAAD,CAFO;AAAA;AAAA,MAEhCM,IAFgC;AAAA,MAE1BC,OAF0B;;AAAA,UAGb,CAHa;AAAA;AAAA,MAGhCC,KAHgC;AAAA,MAGzBC,QAHyB;;AAAA,mBAITT,QAAQ,CAAC,IAAD,CAJC;AAAA;AAAA,MAIhCU,OAJgC;AAAA,MAIvBC,UAJuB;;AAMvC,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAc;AAAA,QAAbC,IAAa,uEAAN,CAAM;AAC/B;AAD+B,sBAEP,KAAI,CAACC,KAFE;AAAA,QAEvBR,IAFuB,eAEvBA,IAFuB;AAAA,QAEjBE,KAFiB,eAEjBA,KAFiB,EAG/B;;AACA,QAAIA,KAAK,IAAIF,IAAI,CAACS,MAAL,IAAeP,KAA5B,EAAmC;AACjC,aAAO,KAAP;AACD;;AACD;AACAD,IAAAA,OAAO,CAACF,GAAD,CAAP,CAR+B,CAS/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GArBH;;AAsBE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAEE,QAAC,cAAD;AACE,MAAA,WAAW,EAAE,KADf,CACsB;AADtB;AAEE,MAAA,SAAS,EAAE,CAFb,CAEgB;AAFhB;AAGE,MAAA,QAAQ,EAAEO,YAHZ,CAG2B;AAH3B;AAIE,MAAA,OAAO,EAAEF,OAJX,CAIoB;AAJpB;AAKE,MAAA,SAAS,EAAE,KALb,CAKoB;AALpB;AAAA,6BAOE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBAEIJ,IAAI,CAACU,GAAL,CAAS,UAACC,KAAD,EAAQC,GAAR;AAAA,8BACP;AAAA,4BAAeA,GAAf;AAAA,aAAQA,GAAR;AAAA;AAAA;AAAA;AAAA,mBADO;AAAA,SAAT;AAFJ;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBL;;GAhDuBd,gB;;KAAAA,gB","sourcesContent":["import React, { useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport axios from 'axios'\nimport qs from 'qs'\nimport './style.less'\n\nexport default function InfiniteScroller() {\n    const arr = [ 'a', 'b', 'c', 'd', 'e']\n    const [data, setData] = useState([])\n    const [count, setCount] = 0\n    const [hasMore, setHasMore] = useState(true)\n    \n    const loadMoreData = (page = 1) => {\n        // page 当前滚动到了第几页\n        const { data, count } = this.state\n        // 超过200条数据 不继续监听下拉事件\n        if (count && data.length >= count) {\n          return false\n        }\n        debugger\n        setData(arr)\n        // page 是当前请求第几页数据\n        // limit 每页我需要返回的数据条数\n        // axios.post('https://blogs.zdldove.top/Home/Apis/listWithPage',qs.stringify({page, limit: 20}))\n        //   .then(res => {\n        //     this.setState({\n        //       data: [...data, ...arr], //拼接每次加载的数据 arr是我自定义的数据\n        //       count: res.data.result.count, \n        //     }, () => {\n        //      console.log(this.state) //查看数据是否已经改变\n        //     })\n        //   })\n        //   .catch(err => console.log(err))\n      }\n      return (\n        <div className=\"box\">\n            {/* 下拉加载 */}\n          <InfiniteScroll\n            initialLoad={false} // 不让它进入直接加载\n            pageStart={1} // 设置初始化请求的页数\n            loadMore={loadMoreData}  // 监听的ajax请求\n            hasMore={hasMore} // 是否继续监听滚动事件 true 监听 | false 不再监听\n            useWindow={false} // 不监听 window 滚动条\n          >\n            <div className=\"pages-hoc\">\n              {\n                data.map((value, key) => (\n                  <p key={key}> {key} </p>\n                ))\n              }\n            </div>\n          </InfiniteScroll>\n        </div>\n      )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}