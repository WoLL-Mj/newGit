{"ast":null,"code":"import _objectSpread from \"/Users/wanglong/wl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/wanglong/wl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/wanglong/wl/src/template/InfoChartHook/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport ReactDataSheet from 'react-datasheet';\nimport 'react-datasheet/lib/react-datasheet.css';\nimport './index.css';\nimport { Tooltip, Button } from 'antd';\nexport default function InfoChartHook() {\n  _s();\n\n  var _this = this;\n\n  // const value = {\n  //   columns: [\n  //     { title: '尺码表', key: uuid()},\n  //     {title: '衣长（cm）', key: uuid()},\n  //     {title: '肩宽（cm）', key: uuid()},\n  //     {title: '胸围（cm）', key: uuid()},\n  //     {title: '腰围（cm）', key: uuid()},\n  //     {title: '袖长（cm）', key: uuid()}\n  //   ],\n  //   dataSource = [{}, {}, {}, {}, {}],\n  //   tableTitle = ''\n  // }\n  // [{ value: 1, component: (\n  //   <button onClick={() => {\n  //     const _grid = grid\n  //     _grid.splice(1,0,[{ value: 1 }, { value: 2 }])\n  //     setGrig(_grid)\n  //   }}>\n  //     Rendered\n  //   </button>\n  // ) }, { value: 3 }],\n  // [{ value: 2 }, { value: 4 }],\n  var _useState = useState([[{\n    value: 1\n  }, {\n    value: 2\n  }, {\n    value: 3\n  }, {\n    value: 4\n  }, {\n    value: 5\n  }, {\n    value: 6\n  }], [{\n    value: 11\n  }, {\n    value: 22\n  }, {\n    value: 33\n  }, {\n    value: 44\n  }, {\n    value: 55\n  }, {\n    value: 66\n  }]]),\n      _useState2 = _slicedToArray(_useState, 2),\n      grid = _useState2[0],\n      setGrig = _useState2[1];\n\n  var onCellsChanged = function onCellsChanged(changes) {\n    return changes.forEach(function (_ref) {\n      var cell = _ref.cell,\n          row = _ref.row,\n          col = _ref.col,\n          value = _ref.value;\n      debugger;\n      grid[row][col].value = parseInt(value);\n      grid[row][col].expr = value;\n      console.log(\"New expression :\" + value);\n    });\n  };\n\n  var MyViewComponent = function MyViewComponent() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"123\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var columns = [{\n    name: '尺码表'\n  }, {\n    name: '衣长（cm）'\n  }, {\n    name: '肩宽（cm）'\n  }, {\n    name: '胸围（cm）'\n  }, {\n    name: '腰围（cm）'\n  }, {\n    name: '袖长（cm）'\n  }];\n  return /*#__PURE__*/_jsxDEV(ReactDataSheet, {\n    data: grid,\n    valueRenderer: function valueRenderer(cell) {\n      return cell.value;\n    },\n    onCellsChanged: function onCellsChanged(changes) {\n      changes.forEach(function (_ref2) {\n        var cell = _ref2.cell,\n            row = _ref2.row,\n            col = _ref2.col,\n            value = _ref2.value;\n        grid[row][col] = _objectSpread(_objectSpread({}, grid[row][col]), {}, {\n          value\n        });\n      });\n      setGrig(grid);\n    } // onCellsChanged={onCellsChanged}\n    // attributesRenderer={(cell) => {'data-hint': cell.hint || {}}\n    ,\n    sheetRenderer: function sheetRenderer(props) {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        className: props.className + ' my-awesome-extra-class',\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"action-cell\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 23\n            }, _this), columns.map(function (col) {\n              return /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"cell\",\n                children: col.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, _this);\n    },\n    rowRenderer: function rowRenderer(props) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"action-cell\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\" // checked={isSelected(props.row)}\n            ,\n            onChange: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, _this), props.children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, _this);\n    },\n    valueViewer: function valueViewer(e) {\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        placement: \"top\",\n        title: e.value,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: e.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, _this);\n    } // dataEditor={props => {\n    //   debugger\n    //   return (\n    //   props.col === 0 ? <MyDatePicker {...props} /> : <DataEditor {...props}/>\n    // )}}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InfoChartHook, \"rdW4H3YLnvDAFue7VcDJrN3p2xc=\");\n\n_c = InfoChartHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoChartHook\");","map":{"version":3,"sources":["/Users/wanglong/wl/src/template/InfoChartHook/index.js"],"names":["React","useState","axios","ReactDataSheet","Tooltip","Button","InfoChartHook","value","grid","setGrig","onCellsChanged","changes","forEach","cell","row","col","parseInt","expr","console","log","MyViewComponent","columns","name","props","className","map","children","e"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAO,yCAAP;AACA,OAAO,aAAP;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,MAAhC;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AAAA;;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBsC,kBAwBdL,QAAQ,CAAC,CAC/B,CAAC;AAAEM,IAAAA,KAAK,EAAE;AAAT,GAAD,EAAe;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAf,EAA4B;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAA5B,EAA0C;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAA1C,EAAuD;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAvD,EAAqE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAArE,CAD+B,EAE/B,CAAC;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAD,EAAgB;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAhB,EAA8B;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAA9B,EAA6C;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAA7C,EAA2D;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAA3D,EAA0E;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAA1E,CAF+B,CAAD,CAxBM;AAAA;AAAA,MAwB/BC,IAxB+B;AAAA,MAwBzBC,OAxByB;;AA4BtC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD;AAAA,WAAaA,OAAO,CAACC,OAAR,CAAgB,gBAA6B;AAAA,UAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,UAArBC,GAAqB,QAArBA,GAAqB;AAAA,UAAhBC,GAAgB,QAAhBA,GAAgB;AAAA,UAAXR,KAAW,QAAXA,KAAW;AAC/E;AACAC,MAAAA,IAAI,CAACM,GAAD,CAAJ,CAAUC,GAAV,EAAeR,KAAf,GAAuBS,QAAQ,CAACT,KAAD,CAA/B;AACAC,MAAAA,IAAI,CAACM,GAAD,CAAJ,CAAUC,GAAV,EAAeE,IAAf,GAAsBV,KAAtB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBZ,KAAjC;AACD,KALmC,CAAb;AAAA,GAAvB;;AAMA,MAAMa,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAGD,GAJD;;AAKA,MAAMC,OAAO,GAAI,CACf;AAAEC,IAAAA,IAAI,EAAE;AAAR,GADe,EAEf;AAACA,IAAAA,IAAI,EAAE;AAAP,GAFe,EAGf;AAACA,IAAAA,IAAI,EAAE;AAAP,GAHe,EAIf;AAACA,IAAAA,IAAI,EAAE;AAAP,GAJe,EAKf;AAACA,IAAAA,IAAI,EAAE;AAAP,GALe,EAMf;AAACA,IAAAA,IAAI,EAAE;AAAP,GANe,CAAjB;AAQA,sBACE,QAAC,cAAD;AACE,IAAA,IAAI,EAAEd,IADR;AAEE,IAAA,aAAa,EAAE,uBAACK,IAAD,EAAU;AACvB,aAAOA,IAAI,CAACN,KAAZ;AACD,KAJH;AAKE,IAAA,cAAc,EAAE,wBAAAI,OAAO,EAAI;AACzBA,MAAAA,OAAO,CAACC,OAAR,CAAgB,iBAA+B;AAAA,YAA5BC,IAA4B,SAA5BA,IAA4B;AAAA,YAAtBC,GAAsB,SAAtBA,GAAsB;AAAA,YAAjBC,GAAiB,SAAjBA,GAAiB;AAAA,YAAZR,KAAY,SAAZA,KAAY;AAC7CC,QAAAA,IAAI,CAACM,GAAD,CAAJ,CAAUC,GAAV,oCAAsBP,IAAI,CAACM,GAAD,CAAJ,CAAUC,GAAV,CAAtB;AAAsCR,UAAAA;AAAtC;AACD,OAFD;AAGAE,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAVH,CAWE;AACA;AAZF;AAaE,IAAA,aAAa,EAAE,uBAAAe,KAAK,EAAI;AACtB,0BACE;AAAO,QAAA,SAAS,EAAEA,KAAK,CAACC,SAAN,GAAkB,yBAApC;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEKH,OAAO,CAACI,GAAR,CAAY,UAAAV,GAAG,EAAI;AAClB,kCAAQ;AAAI,gBAAA,SAAS,EAAC,MAAd;AAAA,0BAAsBA,GAAG,CAACO;AAA1B;AAAA;AAAA;AAAA;AAAA,uBAAR;AACD,aAFA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBADJ,eASI;AAAA,oBACKC,KAAK,CAACG;AADX;AAAA;AAAA;AAAA;AAAA,iBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAcE,KA5BN;AA8BE,IAAA,WAAW,EAAE,qBAAAH,KAAK;AAAA,0BAChB;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,iCACI;AACI,YAAA,IAAI,EAAC,UADT,CAEI;AAFJ;AAGI,YAAA,QAAQ;AAHZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBADJ,EAQKA,KAAK,CAACG,QARX;AAAA;AAAA;AAAA;AAAA;AAAA,eADgB;AAAA,KA9BpB;AA0CE,IAAA,WAAW,EAAE,qBAAAC,CAAC,EAAI;AAChB,0BACE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,KAAnB;AAAyB,QAAA,KAAK,EAAEA,CAAC,CAACpB,KAAlC;AAAA,+BACE;AAAA,oBAAMoB,CAAC,CAACpB;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADF;AAKD,KAhDH,CAiDA;AACA;AACA;AACA;AACA;;AArDA;AAAA;AAAA;AAAA;AAAA,UADF;AAyDD;;GAxGuBD,a;;KAAAA,a","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport ReactDataSheet from 'react-datasheet'\nimport 'react-datasheet/lib/react-datasheet.css'\nimport './index.css'\nimport { Tooltip, Button } from 'antd';\n\nexport default function InfoChartHook() {\n  // const value = {\n  //   columns: [\n  //     { title: '尺码表', key: uuid()},\n  //     {title: '衣长（cm）', key: uuid()},\n  //     {title: '肩宽（cm）', key: uuid()},\n  //     {title: '胸围（cm）', key: uuid()},\n  //     {title: '腰围（cm）', key: uuid()},\n  //     {title: '袖长（cm）', key: uuid()}\n  //   ],\n  //   dataSource = [{}, {}, {}, {}, {}],\n  //   tableTitle = ''\n  // }\n  // [{ value: 1, component: (\n  //   <button onClick={() => {\n  //     const _grid = grid\n  //     _grid.splice(1,0,[{ value: 1 }, { value: 2 }])\n  //     setGrig(_grid)\n  //   }}>\n  //     Rendered\n  //   </button>\n  // ) }, { value: 3 }],\n  // [{ value: 2 }, { value: 4 }],\n  \n  const [grid, setGrig] = useState([\n    [{ value: 1 }, { value: 2 },{ value: 3 }, { value: 4 },{ value: 5 }, { value: 6 }],\n    [{ value: 11 }, { value: 22 },{ value: 33 }, { value: 44 },{ value: 55 }, { value: 66 }]\n  ])\n  const onCellsChanged = (changes) => changes.forEach(({cell, row, col, value}) => {\n    debugger\n    grid[row][col].value = parseInt(value)\n    grid[row][col].expr = value\n    console.log(\"New expression :\" + value)\n  })\n  const MyViewComponent = () => {\n    return (\n      <div>123</div>\n    )\n  }\n  const columns =  [\n    { name: '尺码表'},\n    {name: '衣长（cm）'},\n    {name: '肩宽（cm）'},\n    {name: '胸围（cm）'},\n    {name: '腰围（cm）'},\n    {name: '袖长（cm）'}\n  ]\n  return (\n    <ReactDataSheet\n      data={grid}\n      valueRenderer={(cell) => {\n        return cell.value\n      }}\n      onCellsChanged={changes => {\n        changes.forEach(({ cell, row, col, value }) => {\n          grid[row][col] = { ...grid[row][col], value }\n        })\n        setGrig(grid)\n      }}\n      // onCellsChanged={onCellsChanged}\n      // attributesRenderer={(cell) => {'data-hint': cell.hint || {}}\n      sheetRenderer={props => {\n        return (\n          <table className={props.className + ' my-awesome-extra-class'}>\n              <thead>\n                  <tr>\n                      <th className='action-cell' />\n                      {columns.map(col => {\n                        return (<th className='cell'>{col.name}</th>)\n                      })}\n                  </tr>\n              </thead>\n              <tbody>\n                  {props.children}\n              </tbody>\n          </table>\n        )}\n      }\n      rowRenderer={props => (\n        <tr>\n            <td className='action-cell'>\n                <input\n                    type='checkbox'\n                    // checked={isSelected(props.row)}\n                    onChange\n                />\n            </td>\n            {props.children}\n        </tr>\n      )}\n      valueViewer={e => {\n        return (\n          <Tooltip placement=\"top\" title={e.value}>\n            <div>{e.value}</div>\n          </Tooltip>\n        )\n      }}\n    // dataEditor={props => {\n    //   debugger\n    //   return (\n    //   props.col === 0 ? <MyDatePicker {...props} /> : <DataEditor {...props}/>\n    // )}}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}