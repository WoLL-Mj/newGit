{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/wanglong/wl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/wanglong/wl/src/template/Xia_La/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport './index.css';\nexport default function InfiniteScroller() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  var requestList = function requestList() {\n    debugger;\n    var response = {\n      list: [1, 2, 4, 5, 6, 7]\n    };\n    setList(list.concat(response.list));\n  };\n\n  useEffect(function () {\n    requestList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '200px',\n      overflow: 'auto',\n      border: '1px solid'\n    },\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: list.length,\n      next: requestList,\n      hasMore: false,\n      loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this),\n      children: list.map(function (item, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 100\n          },\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InfiniteScroller, \"ZBNfaudzy8bVxb8UgkyyMnLdlWY=\");\n\n_c = InfiniteScroller;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfiniteScroller\");","map":{"version":3,"sources":["/Users/wanglong/wl/src/template/Xia_La/index.js"],"names":["React","useEffect","useState","InfiniteScroll","InfiniteScroller","list","setList","requestList","response","concat","height","overflow","border","length","map","item","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAO,aAAP;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AAAA;;AAAA,kBACfF,QAAQ,CAAC,EAAD,CADO;AAAA;AAAA,MAChCG,IADgC;AAAA,MAC1BC,OAD0B;;AAEvC,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB;AACA,QAAMC,QAAQ,GAAG;AAACH,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX;AAAP,KAAjB;AACAC,IAAAA,OAAO,CAACD,IAAI,CAACI,MAAL,CAAYD,QAAQ,CAACH,IAArB,CAAD,CAAP;AACH,GAJD;;AAKAJ,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,MAAM,EAAE,OAAT;AAAkBC,MAAAA,QAAQ,EAAE,MAA5B;AAAoCC,MAAAA,MAAM,EAAE;AAA5C,KAAZ;AAAA,2BACA,QAAC,cAAD;AACI,MAAA,UAAU,EAAEP,IAAI,CAACQ,MADrB;AAEI,MAAA,IAAI,EAAEN,WAFV;AAGI,MAAA,OAAO,EAAE,KAHb;AAII,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJZ;AAAA,gBAMKF,IAAI,CAACS,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP;AAAA,4BACV;AAAK,UAAA,KAAK,EAAE;AAAEN,YAAAA,MAAM,EAAE;AAAV,WAAZ;AAAA,oBACKK;AADL,WAAkCC,KAAlC;AAAA;AAAA;AAAA;AAAA,iBADU;AAAA,OAAT;AANL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA1BuBZ,gB;;KAAAA,gB;AA0BvB","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport './index.css'\n\nexport default function InfiniteScroller() {\n    const [list, setList] = useState([]);\n    const requestList = () => {\n        debugger\n        const response = {list: [1,2,4,5,6,7]}\n        setList(list.concat(response.list));\n    }\n    useEffect(() => {\n        requestList();\n    }, []);\n    return (\n        <div style={{height: '200px', overflow: 'auto', border: '1px solid'}}>\n        <InfiniteScroll\n            dataLength={list.length}\n            next={requestList}\n            hasMore={false}\n            loader={<h4>Loading...</h4>}\n        >\n            {list.map((item, index) => (\n            <div style={{ height: 100 }} key={index}>\n                {item}\n            </div>\n            ))}\n        </InfiniteScroll>\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}