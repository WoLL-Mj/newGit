{"ast":null,"code":"import _objectSpread from \"/Users/wanglong/wl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/wanglong/wl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/wanglong/wl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/wanglong/wl/src/template/InfoChartHook/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport ReactDataSheet from 'react-datasheet';\nimport 'react-datasheet/lib/react-datasheet.css';\nimport './index.css';\nimport { Tooltip, Button } from 'antd';\nexport default function InfoChartHook() {\n  _s();\n\n  var _this = this;\n\n  // const value = {\n  //   columns: [\n  //     { title: '尺码表', key: uuid()},\n  //     {title: '衣长（cm）', key: uuid()},\n  //     {title: '肩宽（cm）', key: uuid()},\n  //     {title: '胸围（cm）', key: uuid()},\n  //     {title: '腰围（cm）', key: uuid()},\n  //     {title: '袖长（cm）', key: uuid()}\n  //   ],\n  //   dataSource = [{}, {}, {}, {}, {}],\n  //   tableTitle = ''\n  // }\n  // [{ value: 1, component: (\n  //   <button onClick={() => {\n  //     const _grid = grid\n  //     _grid.splice(1,0,[{ value: 1 }, { value: 2 }])\n  //     setGrig(_grid)\n  //   }}>\n  //     Rendered\n  //   </button>\n  // ) }, { value: 3 }],\n  // [{ value: 2 }, { value: 4 }],\n  var _useState = useState([[{\n    value: 1\n  }, {\n    value: 2\n  }, {\n    value: 3\n  }, {\n    value: 4\n  }, {\n    value: 5\n  }, {\n    value: 6\n  }], [{\n    value: 11\n  }, {\n    value: 22\n  }, {\n    value: 33\n  }, {\n    value: 44\n  }, {\n    value: 55\n  }, {\n    value: 66\n  }]]),\n      _useState2 = _slicedToArray(_useState, 2),\n      grid = _useState2[0],\n      setGrig = _useState2[1];\n\n  var _useState3 = useState([{\n    name: '尺码表'\n  }, {\n    name: '衣长（cm）'\n  }, {\n    name: '肩宽（cm）'\n  }, {\n    name: '胸围（cm）'\n  }, {\n    name: '腰围（cm）'\n  }, {\n    name: '袖长（cm）'\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      columns = _useState4[0],\n      setColumn = _useState4[1];\n\n  var onCellsChanged = function onCellsChanged(changes) {\n    return changes.forEach(function (_ref) {\n      var cell = _ref.cell,\n          row = _ref.row,\n          col = _ref.col,\n          value = _ref.value;\n      debugger;\n      grid[row][col].value = parseInt(value);\n      grid[row][col].expr = value;\n      console.log(\"New expression :\" + value);\n    });\n  };\n\n  var MyViewComponent = function MyViewComponent() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"123\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this);\n  };\n\n  function addRow(rowValue) {\n    var _grid = _toConsumableArray(grid);\n\n    var arr = [{\n      value: 'a'\n    }, {\n      value: 'b'\n    }, {\n      value: 'c'\n    }, {\n      value: 'd'\n    }, {\n      value: 'e'\n    }, {\n      value: 'f'\n    }];\n\n    _grid.splice(1, 0, arr);\n\n    setGrig(_grid);\n    console.log(rowValue.row);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ReactDataSheet, {\n    data: grid,\n    valueRenderer: function valueRenderer(cell) {\n      return cell.value;\n    },\n    onCellsChanged: function onCellsChanged(changes) {\n      changes.forEach(function (_ref2) {\n        var cell = _ref2.cell,\n            row = _ref2.row,\n            col = _ref2.col,\n            value = _ref2.value;\n        grid[row][col] = _objectSpread(_objectSpread({}, grid[row][col]), {}, {\n          value\n        });\n      });\n      setGrig(grid);\n    } // onCellsChanged={onCellsChanged}\n    // attributesRenderer={(cell) => {'data-hint': cell.hint || {}}\n    ,\n    sheetRenderer: function sheetRenderer(props) {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        className: props.className + ' my-awesome-extra-class',\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"action-cell\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 23\n            }, _this), columns.map(function (col, index) {\n              return /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"cell\",\n                children: col.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 27\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, _this);\n    },\n    rowRenderer: function rowRenderer(props) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"action-cell\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-row\",\n            onClick: function onClick() {\n              return addRow(props);\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, _this), props.children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, _this);\n    },\n    valueViewer: function valueViewer(e) {\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        placement: \"top\",\n        title: e.value,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: e.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, _this);\n    } // dataEditor={props => {\n    //   debugger\n    //   return (\n    //   props.col === 0 ? <MyDatePicker {...props} /> : <DataEditor {...props}/>\n    // )}}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InfoChartHook, \"q6OFe4fcNfrcfBiLVLCVl13JeuU=\");\n\n_c = InfoChartHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoChartHook\");","map":{"version":3,"sources":["/Users/wanglong/wl/src/template/InfoChartHook/index.js"],"names":["React","useState","axios","ReactDataSheet","Tooltip","Button","InfoChartHook","value","grid","setGrig","name","columns","setColumn","onCellsChanged","changes","forEach","cell","row","col","parseInt","expr","console","log","MyViewComponent","addRow","rowValue","_grid","arr","splice","props","className","map","index","children","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport ReactDataSheet from 'react-datasheet'\nimport 'react-datasheet/lib/react-datasheet.css'\nimport './index.css'\nimport { Tooltip, Button } from 'antd';\n\nexport default function InfoChartHook() {\n  // const value = {\n  //   columns: [\n  //     { title: '尺码表', key: uuid()},\n  //     {title: '衣长（cm）', key: uuid()},\n  //     {title: '肩宽（cm）', key: uuid()},\n  //     {title: '胸围（cm）', key: uuid()},\n  //     {title: '腰围（cm）', key: uuid()},\n  //     {title: '袖长（cm）', key: uuid()}\n  //   ],\n  //   dataSource = [{}, {}, {}, {}, {}],\n  //   tableTitle = ''\n  // }\n  // [{ value: 1, component: (\n  //   <button onClick={() => {\n  //     const _grid = grid\n  //     _grid.splice(1,0,[{ value: 1 }, { value: 2 }])\n  //     setGrig(_grid)\n  //   }}>\n  //     Rendered\n  //   </button>\n  // ) }, { value: 3 }],\n  // [{ value: 2 }, { value: 4 }],\n  \n  const [grid, setGrig] = useState([\n    [{ value: 1 }, { value: 2 },{ value: 3 }, { value: 4 },{ value: 5 }, { value: 6 }],\n    [{ value: 11 }, { value: 22 },{ value: 33 }, { value: 44 },{ value: 55 }, { value: 66 }]\n  ])\n\n  const [columns, setColumn] = useState([\n    { name: '尺码表'},\n    {name: '衣长（cm）'},\n    {name: '肩宽（cm）'},\n    {name: '胸围（cm）'},\n    {name: '腰围（cm）'},\n    {name: '袖长（cm）'}\n  ])\n  const onCellsChanged = (changes) => changes.forEach(({cell, row, col, value}) => {\n    debugger\n    grid[row][col].value = parseInt(value)\n    grid[row][col].expr = value\n    console.log(\"New expression :\" + value)\n  })\n  const MyViewComponent = () => {\n    return (\n      <div>123</div>\n    )\n  }\n  function addRow(rowValue) {\n    const _grid = [...grid]\n    const arr = [{ value: 'a' }, { value: 'b' },{ value: 'c' }, { value: 'd' },{ value: 'e' }, { value: 'f' }]\n    _grid.splice(1, 0, arr)\n    setGrig(_grid)\n    console.log(rowValue.row)\n\n  } \n  \n  return (\n    <ReactDataSheet\n      data={grid}\n      valueRenderer={(cell) => {\n        return cell.value\n      }}\n      onCellsChanged={changes => {\n        changes.forEach(({ cell, row, col, value }) => {\n          grid[row][col] = { ...grid[row][col], value }\n        })\n        setGrig(grid)\n      }}\n      // onCellsChanged={onCellsChanged}\n      // attributesRenderer={(cell) => {'data-hint': cell.hint || {}}\n      sheetRenderer={props => {\n        return (\n          <table className={props.className + ' my-awesome-extra-class'}>\n              <thead>\n                  <tr>\n                      <th className='action-cell' />\n                      {columns.map((col, index) => {\n                        return (\n                          <th className='cell' key={index}>\n                            {col.name}\n                            {/* <div onClick={addCol}></div> */}\n                          </th>\n                        )\n                      })}\n                  </tr>\n              </thead>\n              <tbody>\n                  {props.children}\n              </tbody>\n          </table>\n        )}\n      }\n      rowRenderer={props => (\n        <tr>\n            <td className='action-cell'>\n                {/* <input\n                    type='checkbox'\n                    checked={addRow(props)}\n                    // onChange={addRow(props)}\n                    onClick={() => addRow(props)}\n                /> */}\n                <div className='add-row' onClick={() => addRow(props)}>+</div>\n            </td>\n            {props.children}\n        </tr>\n      )}\n      valueViewer={e => {\n        return (\n          <Tooltip placement=\"top\" title={e.value}>\n            <div>{e.value}</div>\n          </Tooltip>\n        )\n      }}\n    // dataEditor={props => {\n    //   debugger\n    //   return (\n    //   props.col === 0 ? <MyDatePicker {...props} /> : <DataEditor {...props}/>\n    // )}}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}