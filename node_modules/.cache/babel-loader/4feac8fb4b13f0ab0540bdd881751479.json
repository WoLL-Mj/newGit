{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isDark = isDark;\nexports.getColor = getColor;\nexports.rgbaColor = rgbaColor;\nexports.hsl2rgb = hsl2rgb;\nexports.rgb2hex = rgb2hex;\nexports.rgb2hsl = rgb2hsl;\nexports.colorCoords = colorCoords;\nexports.colorCoordValue = colorCoordValue;\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _colorString = _interopRequireDefault(require(\"color-string\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction isDark(color) {\n  return color[0] * 0.299 + color[1] * 0.587 + color[2] * 0.114 > 186 || color[3] < 0.5;\n}\n\nfunction normalizeHex(hex) {\n  // Knock off the # and lowercase;\n  return hex.substring(1).toLowerCase();\n}\n\nfunction getColor(cssColor) {\n  var isValid = _colorString[\"default\"].get(cssColor);\n\n  var color = (0, _color[\"default\"])(isValid ? cssColor : '#000');\n\n  var _color$rgb$object = color.rgb().object(),\n      r = _color$rgb$object.r,\n      g = _color$rgb$object.g,\n      b = _color$rgb$object.b,\n      alpha = _color$rgb$object.alpha;\n\n  var _color$hsl$object = color.hsl().object(),\n      h = _color$hsl$object.h,\n      s = _color$hsl$object.s,\n      l = _color$hsl$object.l;\n\n  var hex; // If a short hex came in, accept it as value.\n\n  if (isValid && cssColor.length === 4) {\n    hex = normalizeHex(cssColor);\n  } else {\n    hex = normalizeHex(color.hex());\n  }\n\n  return {\n    h: Math.round(h),\n    s: Math.round(s),\n    l: Math.round(l),\n    r: Math.round(r),\n    g: Math.round(g),\n    b: Math.round(b),\n    a: isNaN(alpha) ? 1 : alpha,\n    hex: hex\n  };\n}\n\nfunction rgbaColor(r, g, b, a) {\n  return \"rgba(\".concat([r, g, b, a / 100].join(','), \")\");\n}\n\nfunction hsl2rgb(h, s, l) {\n  var _Color$rgb$object = (0, _color[\"default\"])({\n    h: h,\n    s: s,\n    l: l\n  }).rgb().object(),\n      r = _Color$rgb$object.r,\n      g = _Color$rgb$object.g,\n      b = _Color$rgb$object.b;\n\n  return {\n    r: Math.round(r),\n    g: Math.round(g),\n    b: Math.round(b)\n  };\n}\n\nfunction rgb2hex(r, g, b) {\n  return normalizeHex((0, _color[\"default\"])({\n    r: r,\n    g: g,\n    b: b\n  }).hex());\n}\n\nfunction rgb2hsl(r, g, b) {\n  var _Color$hsl$object = (0, _color[\"default\"])({\n    r: r,\n    g: g,\n    b: b\n  }).hsl().object(),\n      h = _Color$hsl$object.h,\n      s = _Color$hsl$object.s,\n      l = _Color$hsl$object.l;\n\n  return {\n    h: Math.round(h),\n    s: Math.round(s),\n    l: Math.round(l)\n  };\n}\n/**\n * Determine x y coordinates based on color channel.\n *\n * R: x = b, y = g\n * G: x = b, y = r\n * B: x = r, y = g\n *\n * H: x = s, y = l\n * S: x = h, y = l\n * L: x = h, y = s\n *\n * @param {string} channel one of `r`, `g`, `b`, `h`, `s`, or `l`\n * @param {Object} color a color object of current values associated to key\n * @return {Object} coordinates\n */\n\n\nfunction colorCoords(channel, color) {\n  var x, y, xmax, ymax;\n\n  switch (channel) {\n    case 'r':\n      xmax = 255;\n      ymax = 255;\n      x = color.b;\n      y = ymax - color.g;\n      break;\n\n    case 'g':\n      xmax = 255;\n      ymax = 255;\n      x = color.b;\n      y = ymax - color.r;\n      break;\n\n    case 'b':\n      xmax = 255;\n      ymax = 255;\n      x = color.r;\n      y = ymax - color.g;\n      break;\n\n    case 'h':\n      xmax = 100;\n      ymax = 100;\n      x = color.s;\n      y = ymax - color.l;\n      break;\n\n    case 's':\n      xmax = 360;\n      ymax = 100;\n      x = color.h;\n      y = ymax - color.l;\n      break;\n\n    case 'l':\n      xmax = 360;\n      ymax = 100;\n      x = color.h;\n      y = ymax - color.s;\n      break;\n  }\n\n  return {\n    xmax: xmax,\n    ymax: ymax,\n    x: x,\n    y: y\n  };\n}\n/**\n * Takes a channel and returns its sibling values based on x,y positions\n *\n * R: x = b, y = g\n * G: x = b, y = r\n * B: x = r, y = g\n *\n * H: x = s, y = l\n * S: x = h, y = l\n * L: x = h, y = s\n *\n * @param {string} channel one of `r`, `g`, `b`, `h`, `s`, or `l`\n * @param {Object} pos x, y coordinates\n * @return {Object} Changed sibling values\n */\n\n\nfunction colorCoordValue(channel, pos) {\n  var color = {};\n  pos.x = Math.round(pos.x);\n  pos.y = Math.round(pos.y);\n\n  switch (channel) {\n    case 'r':\n      color.b = pos.x;\n      color.g = 255 - pos.y;\n      break;\n\n    case 'g':\n      color.b = pos.x;\n      color.r = 255 - pos.y;\n      break;\n\n    case 'b':\n      color.r = pos.x;\n      color.g = 255 - pos.y;\n      break;\n\n    case 'h':\n      color.s = pos.x;\n      color.l = 100 - pos.y;\n      break;\n\n    case 's':\n      color.h = pos.x;\n      color.l = 100 - pos.y;\n      break;\n\n    case 'l':\n      color.h = pos.x;\n      color.s = 100 - pos.y;\n      break;\n  }\n\n  return color;\n}","map":{"version":3,"sources":["/Users/wanglong/wl/node_modules/@mapbox/react-colorpickr/dist/colorfunc.js"],"names":["Object","defineProperty","exports","value","isDark","getColor","rgbaColor","hsl2rgb","rgb2hex","rgb2hsl","colorCoords","colorCoordValue","_color","_interopRequireDefault","require","_colorString","obj","__esModule","color","normalizeHex","hex","substring","toLowerCase","cssColor","isValid","get","_color$rgb$object","rgb","object","r","g","b","alpha","_color$hsl$object","hsl","h","s","l","length","Math","round","a","isNaN","concat","join","_Color$rgb$object","_Color$hsl$object","channel","x","y","xmax","ymax","pos"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isDark = isDark;\nexports.getColor = getColor;\nexports.rgbaColor = rgbaColor;\nexports.hsl2rgb = hsl2rgb;\nexports.rgb2hex = rgb2hex;\nexports.rgb2hsl = rgb2hsl;\nexports.colorCoords = colorCoords;\nexports.colorCoordValue = colorCoordValue;\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _colorString = _interopRequireDefault(require(\"color-string\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction isDark(color) {\n  return color[0] * 0.299 + color[1] * 0.587 + color[2] * 0.114 > 186 || color[3] < 0.5;\n}\n\nfunction normalizeHex(hex) {\n  // Knock off the # and lowercase;\n  return hex.substring(1).toLowerCase();\n}\n\nfunction getColor(cssColor) {\n  var isValid = _colorString[\"default\"].get(cssColor);\n\n  var color = (0, _color[\"default\"])(isValid ? cssColor : '#000');\n\n  var _color$rgb$object = color.rgb().object(),\n      r = _color$rgb$object.r,\n      g = _color$rgb$object.g,\n      b = _color$rgb$object.b,\n      alpha = _color$rgb$object.alpha;\n\n  var _color$hsl$object = color.hsl().object(),\n      h = _color$hsl$object.h,\n      s = _color$hsl$object.s,\n      l = _color$hsl$object.l;\n\n  var hex; // If a short hex came in, accept it as value.\n\n  if (isValid && cssColor.length === 4) {\n    hex = normalizeHex(cssColor);\n  } else {\n    hex = normalizeHex(color.hex());\n  }\n\n  return {\n    h: Math.round(h),\n    s: Math.round(s),\n    l: Math.round(l),\n    r: Math.round(r),\n    g: Math.round(g),\n    b: Math.round(b),\n    a: isNaN(alpha) ? 1 : alpha,\n    hex: hex\n  };\n}\n\nfunction rgbaColor(r, g, b, a) {\n  return \"rgba(\".concat([r, g, b, a / 100].join(','), \")\");\n}\n\nfunction hsl2rgb(h, s, l) {\n  var _Color$rgb$object = (0, _color[\"default\"])({\n    h: h,\n    s: s,\n    l: l\n  }).rgb().object(),\n      r = _Color$rgb$object.r,\n      g = _Color$rgb$object.g,\n      b = _Color$rgb$object.b;\n\n  return {\n    r: Math.round(r),\n    g: Math.round(g),\n    b: Math.round(b)\n  };\n}\n\nfunction rgb2hex(r, g, b) {\n  return normalizeHex((0, _color[\"default\"])({\n    r: r,\n    g: g,\n    b: b\n  }).hex());\n}\n\nfunction rgb2hsl(r, g, b) {\n  var _Color$hsl$object = (0, _color[\"default\"])({\n    r: r,\n    g: g,\n    b: b\n  }).hsl().object(),\n      h = _Color$hsl$object.h,\n      s = _Color$hsl$object.s,\n      l = _Color$hsl$object.l;\n\n  return {\n    h: Math.round(h),\n    s: Math.round(s),\n    l: Math.round(l)\n  };\n}\n/**\n * Determine x y coordinates based on color channel.\n *\n * R: x = b, y = g\n * G: x = b, y = r\n * B: x = r, y = g\n *\n * H: x = s, y = l\n * S: x = h, y = l\n * L: x = h, y = s\n *\n * @param {string} channel one of `r`, `g`, `b`, `h`, `s`, or `l`\n * @param {Object} color a color object of current values associated to key\n * @return {Object} coordinates\n */\n\n\nfunction colorCoords(channel, color) {\n  var x, y, xmax, ymax;\n\n  switch (channel) {\n    case 'r':\n      xmax = 255;\n      ymax = 255;\n      x = color.b;\n      y = ymax - color.g;\n      break;\n\n    case 'g':\n      xmax = 255;\n      ymax = 255;\n      x = color.b;\n      y = ymax - color.r;\n      break;\n\n    case 'b':\n      xmax = 255;\n      ymax = 255;\n      x = color.r;\n      y = ymax - color.g;\n      break;\n\n    case 'h':\n      xmax = 100;\n      ymax = 100;\n      x = color.s;\n      y = ymax - color.l;\n      break;\n\n    case 's':\n      xmax = 360;\n      ymax = 100;\n      x = color.h;\n      y = ymax - color.l;\n      break;\n\n    case 'l':\n      xmax = 360;\n      ymax = 100;\n      x = color.h;\n      y = ymax - color.s;\n      break;\n  }\n\n  return {\n    xmax: xmax,\n    ymax: ymax,\n    x: x,\n    y: y\n  };\n}\n/**\n * Takes a channel and returns its sibling values based on x,y positions\n *\n * R: x = b, y = g\n * G: x = b, y = r\n * B: x = r, y = g\n *\n * H: x = s, y = l\n * S: x = h, y = l\n * L: x = h, y = s\n *\n * @param {string} channel one of `r`, `g`, `b`, `h`, `s`, or `l`\n * @param {Object} pos x, y coordinates\n * @return {Object} Changed sibling values\n */\n\n\nfunction colorCoordValue(channel, pos) {\n  var color = {};\n  pos.x = Math.round(pos.x);\n  pos.y = Math.round(pos.y);\n\n  switch (channel) {\n    case 'r':\n      color.b = pos.x;\n      color.g = 255 - pos.y;\n      break;\n\n    case 'g':\n      color.b = pos.x;\n      color.r = 255 - pos.y;\n      break;\n\n    case 'b':\n      color.r = pos.x;\n      color.g = 255 - pos.y;\n      break;\n\n    case 'h':\n      color.s = pos.x;\n      color.l = 100 - pos.y;\n      break;\n\n    case 's':\n      color.h = pos.x;\n      color.l = 100 - pos.y;\n      break;\n\n    case 'l':\n      color.h = pos.x;\n      color.s = 100 - pos.y;\n      break;\n  }\n\n  return color;\n}"]},"metadata":{},"sourceType":"script"}