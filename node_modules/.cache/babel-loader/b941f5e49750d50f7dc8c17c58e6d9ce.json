{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectSpread from \"/Users/wanglong/wl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/wanglong/wl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/wanglong/wl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/wanglong/wl/src/template/InfoChart/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport axios from 'axios';\nimport ReactDataSheet from 'react-datasheet';\nimport 'react-datasheet/lib/react-datasheet.css';\nexport default function InfoChart() {\n  _s();\n\n  var _useState = useState([[{\n    value: 1\n  }, {\n    value: 3\n  }], [{\n    value: 2\n  }, {\n    value: 4\n  }]]),\n      _useState2 = _slicedToArray(_useState, 2),\n      grid = _useState2[0],\n      setGrid = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(ReactDataSheet, {\n    data: grid,\n    valueRenderer: function valueRenderer(cell) {\n      return cell.value;\n    },\n    onCellsChanged: function onCellsChanged(changes) {\n      var grid1 = grid.map(function (row) {\n        return _toConsumableArray(row);\n      });\n      changes.forEach(function (_ref) {\n        var cell = _ref.cell,\n            row = _ref.row,\n            col = _ref.col,\n            value = _ref.value;\n        grid1[row][col] = _objectSpread(_objectSpread({}, grid1[row][col]), {}, {\n          value\n        });\n      });\n      setGrid({\n        grid1\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n}\n\n_s(InfoChart, \"t+XlvAVq5D2DKjl5QpOuxAop310=\");\n\n_c = InfoChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoChart\");","map":{"version":3,"sources":["/Users/wanglong/wl/src/template/InfoChart/index.js"],"names":["React","useState","Form","Input","Button","Checkbox","axios","ReactDataSheet","InfoChart","value","grid","setGrid","cell","changes","grid1","map","row","forEach","col"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,QAA9B,QAA8C,MAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAO,yCAAP;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBACRP,QAAQ,CAAC,CAAC,CAAC;AAAEQ,IAAAA,KAAK,EAAE;AAAT,GAAD,EAAe;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAf,CAAD,EAA8B,CAAC;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAD,EAAe;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAf,CAA9B,CAAD,CADA;AAAA;AAAA,MACzBC,IADyB;AAAA,MACnBC,OADmB;;AAEhC,sBACE,QAAC,cAAD;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,aAAa,EAAE,uBAAAE,IAAI;AAAA,aAAIA,IAAI,CAACH,KAAT;AAAA,KAFrB;AAGE,IAAA,cAAc,EAAE,wBAAAI,OAAO,EAAI;AACzB,UAAMC,KAAK,GAAGJ,IAAI,CAACK,GAAL,CAAS,UAAAC,GAAG;AAAA,kCAAQA,GAAR;AAAA,OAAZ,CAAd;AACAH,MAAAA,OAAO,CAACI,OAAR,CAAgB,gBAA+B;AAAA,YAA5BL,IAA4B,QAA5BA,IAA4B;AAAA,YAAtBI,GAAsB,QAAtBA,GAAsB;AAAA,YAAjBE,GAAiB,QAAjBA,GAAiB;AAAA,YAAZT,KAAY,QAAZA,KAAY;AAC7CK,QAAAA,KAAK,CAACE,GAAD,CAAL,CAAWE,GAAX,oCAAuBJ,KAAK,CAACE,GAAD,CAAL,CAAWE,GAAX,CAAvB;AAAwCT,UAAAA;AAAxC;AACD,OAFD;AAGAE,MAAAA,OAAO,CAAC;AAAEG,QAAAA;AAAF,OAAD,CAAP;AACD;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaH;;GAfuBN,S;;KAAAA,S","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport axios from 'axios'\nimport ReactDataSheet from 'react-datasheet'\nimport 'react-datasheet/lib/react-datasheet.css'\n\nexport default function InfoChart() {\n    const [grid, setGrid] = useState([[{ value: 1 }, { value: 3 }],[{ value: 2 }, { value: 4 }]])\n    return (\n      <ReactDataSheet\n        data={grid}\n        valueRenderer={cell => cell.value}\n        onCellsChanged={changes => {\n          const grid1 = grid.map(row => [...row]);\n          changes.forEach(({ cell, row, col, value }) => {\n            grid1[row][col] = { ...grid1[row][col], value };\n          });\n          setGrid({ grid1 });\n        }}\n      />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}